name: Deploy to EC2

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: Production

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

      - name: Build application
        run: npm run build

      - name: Setup SSH
        run: |
          # Create .ssh directory
          mkdir -p $HOME/.ssh
          # Write the SSH key to a file
          echo "${{ secrets.EC2_SSH_KEY }}" > $HOME/.ssh/deploy_key
          # Set correct permissions
          chmod 600 $HOME/.ssh/deploy_key
          # Start SSH agent
          eval "$(ssh-agent -s)"
          # Add the key to SSH agent
          ssh-add $HOME/.ssh/deploy_key
          # Add host to known hosts
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> $HOME/.ssh/known_hosts
          # Test SSH connection
          ssh -i $HOME/.ssh/deploy_key -o StrictHostKeyChecking=no ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} "echo 'SSH connection successful'"

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key_path: $HOME/.ssh/deploy_key
          script: |
            cd /var/www/NextStarter
            git pull origin main
            # Install dependencies globally
            sudo npm install -g next
            # Clean install dependencies
            rm -rf node_modules
            rm -rf .next
            npm ci
            # Build the application
            npm run build
            # Kill any existing process on port 3000
            sudo lsof -ti:3000 | xargs -r sudo kill -9
            # Start the application with PM2 using the full path to next
            pm2 delete nextjs-app || true
            pm2 start npm --name "nextjs-app" -- start
            # Make sure port 3000 is open in the firewall
            sudo ufw allow 3000/tcp
